@using Apresentation.ViewModels.CursoViewModel
@using Dominio.ValuesType
@inject Apresentation.Services.CursoServices.UpdateCursoService UpdateCursoService

<form>
    <input @bind="Curso.Id" type="hidden" />
    <div class="row">
        <div class="col-md-4">
            <label for="nome-curso" class="">Nome</label>
            <input @bind="Curso.Nome" type="text" class="form-control" />
        </div>
        <div class="col-md-4">
            <label for="area-curso" class="">Área de atuação</label>
            <input @bind="Curso.AreaAtuacao" type="text" class="form-control" />
        </div>
        <div class="col-md-4">
            <label for="carga-horaria-curso" class="">Carga horária</label>
            <input @bind="Curso.CargaHoraria" type="number" class="form-control" />
        </div>
    </div>
    <div class="row justify-content-center m-md-4">
        <div class="col-md-3">
            <input checked="@TurnoChecked(EnumTurno.MATUTINO)" @onchange="(() => ChangeTurno(EnumTurno.MATUTINO))"
                   id="turno-curso-matutino-update" name="Turno" type="radio" class="form-check-inline" />
            <label for="turno-curso-matutino-update" class="form-check-label">Matutino</label>
        </div>
        <div class="col-md-3">
            <input checked="@TurnoChecked(EnumTurno.VESPERTINO)" @onchange="(() => ChangeTurno(EnumTurno.VESPERTINO))"
                   id="turno-curso-vespertino-update" name="Turno" type="radio" class="form-check-inline" />
            <label for="turno-curso-vespertino-update" class="form-check-label">Vespertino</label>
        </div>
        <div class="col-md-3">
            <input checked="@TurnoChecked(EnumTurno.NOTURNO)" @onchange="(() => ChangeTurno(EnumTurno.NOTURNO))"
                   id="turno-curso-noturno-update" name="Turno" type="radio" class="form-check-inline" />
            <label for="turno-curso-noturno-update" class="form-check-label">Noturno</label>
        </div>
    </div>
</form>
<hr />
<div class="row justify-content-center m-md-4">
    <div class="col-md-1">
        <button @onclick="CancelSubmit" class="btn btn-purple">
            Cancelar
        </button>
    </div>
    <div class="col-md-1">
        <button @onclick="HandleSubmit" class="btn btn-purple">
            Atualizar
        </button>
    </div>
</div>

@code {
    [Parameter] public CursoGetViewModel Curso { get; set; }
    [Parameter] public Action OnRefreshList { get; set; }
    [Parameter] public Action OnCancel { get; set; }

    private void ChangeTurno(Dominio.ValuesType.EnumTurno turnoSelecionado) => Curso.Turno = turnoSelecionado;

    private async Task HandleSubmit()
    {
        if ((bool)await Service.CallService(UpdateCursoService, Enums.EnumTipoSendService.Atualizar, Curso))
            OnRefreshList.Invoke();
    }

    private string TurnoChecked(EnumTurno turno) => (turno == Curso.Turno) ? "checked" : null;

    private void CancelSubmit() => OnCancel.Invoke();
}

