@using Apresentation.ViewModels.CursoViewModel
@inject Apresentation.Services.CursoServices.AddCursoService AddCursoService

<form>
    <div class="row">
        <div class="col-md-4">
            <label for="nome-curso" class="">Nome</label>
            <input @bind="Curso.Nome" id="nome-curso" type="text" class="form-control" />
        </div>
        <div class="col-md-4">
            <label for="area-curso" class="">Área de atuação</label>
            <input @bind="Curso.AreaAtuacao" id="area-curso" type="text" class="form-control" />
        </div>
        <div class="col-md-4">
            <label for="carga-horaria-curso" class="">Carga horária</label>
            <input @bind="Curso.CargaHoraria" id="carga-horaria-curso" type="number" class="form-control" />
        </div>

    </div>
    <div class="row justify-content-center m-md-4">
        <div class="col-md-3">
            <input @onchange="(() => ChangeTurno(Dominio.ValuesType.EnumTurno.MATUTINO))" id="turno-curso-matutino" name="Turno" type="radio" class="form-check-inline" />
            <label for="turno-curso-matutino" class="form-check-label">Matutino</label>
        </div>
        <div class="col-md-3">
            <input @onchange="(() => ChangeTurno(Dominio.ValuesType.EnumTurno.VESPERTINO))" id="turno-curso-vespertino" name="Turno" type="radio" class="form-check-inline" />
            <label for="turno-curso-vespertino" class="form-check-label">Vespertino</label>
        </div>
        <div class="col-md-3">
            <input @onchange="(() => ChangeTurno(Dominio.ValuesType.EnumTurno.NOTURNO))"
                   id="turno-curso-noturno" name="Turno" type="radio" class="form-check-inline" />
            <label for="turno-curso-noturno" class="form-check-label">Noturno</label>
        </div>
    </div>
</form>
<hr />
<div class="row justify-content-center m-md-4">
    <button @onclick="HandleSubmit" class="btn btn-purple">
        Cadastrar
    </button>
</div>

@code {
    [Parameter] public Action OnRefreshList { get; set; }
    private CursoAddViewModel Curso { get; set; } = new CursoAddViewModel();

    private void ChangeTurno(Dominio.ValuesType.EnumTurno turnoSelecionado) => Curso.Turno = turnoSelecionado;

    private async Task HandleSubmit()
    {
        if ((bool)await Service.CallService(AddCursoService, Enums.EnumTipoSendService.Adicionar, Curso))
            OnRefreshList.Invoke();
    }
}
