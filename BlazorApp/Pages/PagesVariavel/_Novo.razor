@using BlazorApp.ViewModels.ModelsVariavel
@inject BlazorApp.Services.ServicesVariavel.VariavelServiceAplicacaoAdd ServiceAdd

<form>
    <div class="row">
        <div class="col-md-2">
            <label for="nome-variavel" class="">Nome</label>
            <input maxlength="25" id="nome-variavel" type="text" class="form-control" @bind="ViewModel.Nome" />
        </div>
        <div class="col-md-5">
            <label for="pergunta-variavel" class="">Pergunta</label>
            <input maxlength="100" id="pergunta-variavel" type="text" class="form-control" @bind="ViewModel.Pergunta" />
        </div>
        <div class="col-md-5">
            <label for="motivo-pergunta-variavel" class="">Motivo pergunta</label>
            <input maxlength="100" id="motivo-pergunta-variavel" type="text" class="form-control" @bind="ViewModel.MotivoPergunta" />
        </div>
    </div>
    <div class="row">
        <div class="form-check col-md-3 mt-4 ml-4">
            <input class="form-check-input" type="checkbox" id="variavel-objetivo" @onclick="ChangeObjetivo">
            <label class="form-check-label" @onclick="ChangeObjetivo">Variável objetivo</label>
        </div>
        <div class="col-md-6">
            <label class="form-check-label">Valor</label>
            <input type="text" class="form-control" @bind="ValorVariavel" />
        </div>
        <div class="col-md-1 mt-4">
            <button type="button" class="btn btn-light" @onclick="AddValorVariavel">
                Inserir
            </button>
        </div>
    </div>
    @if (ViewModel.ValoresDaVariavel.Any())
    {
        <div class="card mt-2" style="max-height: 150px; overflow: auto;">
            <div class="card-header justify-content-center">
                Valores da variável
            </div>
            <div class="card-body justify-content-center">
                @foreach (var valor in ViewModel.ValoresDaVariavel)
                {
                    <p class="card-text">@valor<span class="oi oi-trash ml-3" @onclick="() => RemoveValorVariavel(valor)"></span></p>
                }
            </div>
        </div>
    }
</form>
<div class="row justify-content-center m-md-4">
    <button class="btn btn-purple" @onclick="() => AddVariavel()">
        Adicionar
    </button>
</div>

@code {
    [Parameter] public Action OnRefreshList { get; set; }
    private VariavelViewModelAdd ViewModel = new VariavelViewModelAdd();
    private string ValorVariavel;

    private async Task AddVariavel()
    {
        ViewModel.IdProjeto = ProjetoSelecionado.IdProjetoSelecionado;
        if ((bool)await Service.CallService(ServiceAdd, Enums.EnumTipoSendService.Adicionar, ViewModel))
        {
            ViewModel.ValoresDaVariavel.Clear();
            OnRefreshList.Invoke();
        }
    }

    private void ChangeObjetivo() => ViewModel.Objetivo = !ViewModel.Objetivo;

    private void AddValorVariavel()
    {
        if (ValorVariavel != null && !ViewModel.ValoresDaVariavel.Contains(ValorVariavel))
            ViewModel.ValoresDaVariavel.Add(ValorVariavel);
    }

    private void RemoveValorVariavel(string value) => ViewModel.ValoresDaVariavel.Remove(value);
}
